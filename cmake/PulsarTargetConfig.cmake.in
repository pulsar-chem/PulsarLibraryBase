################################################################################
#                                                                              #
# This file generated from PulsarTargetConfig.cmake.in. Do not edit.           #
#                                                                              #
################################################################################
include(FindPackageHandleStandardArgs)
find_package(PulsarLibraryBase REQUIRED)
include(AssertMacros)
#Get the install root by asusming we are in root/share/cmake/ProjectName
set(INSTALL_ROOT      "${CMAKE_CURRENT_LIST_DIR}") #ProjectName/
get_filename_component(INSTALL_ROOT "${INSTALL_ROOT}" DIRECTORY) # cmake/
get_filename_component(INSTALL_ROOT "${INSTALL_ROOT}" DIRECTORY) #share/
get_filename_component(INSTALL_ROOT "${INSTALL_ROOT}" DIRECTORY) #root/

#Name of the library
set(__name @PULSAR_LIBRARY_NAME@)
string(TOUPPER ${__name} __NAME)

#Find the actual library
find_library(${__NAME}_LIBRARY lib${__name}.so
             PATHS ${INSTALL_ROOT}/lib/${__name})

#Find paths to all header files part of the public API
set(__headers @PULSAR_LIBRARY_HEADERS@)
foreach(__header_i ${__headers})
   get_filename_component(__file_name ${__header_i} NAME_WE)
   #Will be list of where we found header files
   list(APPEND ${__name}_HEADERS ${__file_name}_INCLUDE_DIR)
   find_path(${__file_name}_INCLUDE_DIR ${__header_i}
             PATHS ${INSTALL_ROOT}/include/${__name})
   #All header files better result in same include path...
   if(${__NAME}_INCLUDE_DIR)
       assert_strings_are_equal(${${__NAME}_INCLUDE_DIR}
                                ${${__file_name}_INCLUDE_DIR})
   else()
       set(${__NAME}_INCLUDE_DIR ${${__file_name}_INCLUDE_DIR})
   endif()
endforeach()

FIND_PACKAGE_HANDLE_STANDARD_ARGS(${__NAME} DEFAULT_MSG ${__NAME}_LIBRARY
                                                       ${${__name}_HEADERS})

set(${__NAME}_LIBRARIES ${${__NAME}_LIBRARY})
set(${__NAME}_INCLUDE_DIRS ${${__NAME}_INCLUDE_DIR})

#Find the dependencies
include(DependencyMacros)
set(__depends @PULSAR_LIBRARY_DEPENDS@)
foreach(__depend_i ${__depends})
    find_dependency(${__depend_i} ${__NAME}_INCLUDE_DIRS
                                  ${__NAME}_LIBRARIES
                                  ${__NAME}_DEFINITIONS
                                  REQUIRED)
endforeach()

#Make an interface target for use in other files
add_library(${__name} INTERFACE)
target_link_libraries(${__name} INTERFACE ${${__NAME}_LIBRARIES})
target_include_directories(${__name} INTERFACE ${${__NAME}_INCLUDE_DIRS})
target_compile_definitions(${__name} INTERFACE ${${__NAME}_DEFINITIONS})

#Print our hardwork out
message(STATUS "Found ${__name} include paths: ${${__NAME}_INCLUDE_DIRS}")
message(STATUS "Found ${__name} libraries: ${${__NAME}_LIBRARIES}")
message(STATUS "Found ${__name} defintions: ${${__NAME}_DEFINITIONS}")
